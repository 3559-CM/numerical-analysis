Def f(x):
    Return x**2 – x – 2

Def bisection_method(a, b, tol=1e-5, max_iterations=100):
    If f(a) * f(b) >= 0:
        Print(“Bisection method fails.”)
        Return None
    C = a
    For I in range(max_iterations):
        C = (a + b) / 2
        If f© == 0 or (b – a) / 2 < tol:
            Return c
        If f© * f(a) < 0:
            B = c
        Else:
            A = c
        Print(f”Iteration {i+1}: c = {c}”)
    Return c

Root = bisection_method(1, 3)
Print(f”Root: {root}”)
